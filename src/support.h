/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */

#ifndef SUPPORT_H_
#define SUPPORT_H_

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <gtk/gtk.h>
#include <gst/gst.h>
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (PACKAGE, String)
#  define Q_(String) g_strip_context ((String), gettext (String))
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define Q_(String) g_strip_context ((String), (String))
#  define N_(String) (String)
#endif
typedef struct _cursoroffset {gint x,y;} CursorOffset;

#define popup_menu(X,Y,Z) \
	do { \
		gtk_menu_popup (GTK_MENU(X),NULL,NULL,NULL,NULL,3,gtk_get_current_event_time());\
		gint x,y;gint w,h;gint sx,sy; \
		gtk_window_get_size ( (GtkWindow *)gtk_widget_get_toplevel((GtkWidget *)X),&w,&h); \
		gdk_window_get_pointer( NULL,&x,&y,NULL); \
		gtk_window_get_position( (GtkWindow *)gtk_widget_get_toplevel((GtkWidget *)X),&sx,&sy);    \
		if (h>=gdk_screen_height()-y) \
			gtk_window_move((GtkWindow *)gtk_widget_get_toplevel((GtkWidget *)X),sx,sy-Z);    \
		else    \
			gtk_window_move((GtkWindow *)gtk_widget_get_toplevel((GtkWidget *)X),sx,sy+Z);    \
		if (w>=gdk_screen_width()-x)        \
			gtk_window_move((GtkWindow *)gtk_widget_get_toplevel((GtkWidget *)X),sx-Y,sy);    \
		else        \
			gtk_window_move((GtkWindow *)gtk_widget_get_toplevel((GtkWidget *)X),sx+Y,sy);\
	}while(0)

void        add_pixmap_directory       (const gchar     *directory);
GtkWidget* create_pixmap (const gchar *filename);
GdkPixbuf*  create_pixbuf              (const gchar     *filename);

void shape_pressed (GtkWidget *widget, GdkEventButton *event);
void shape_motion (GtkWidget *widget, GdkEventMotion *event);

struct xmusic {
	GtkWidget *xwindow;
	GtkWidget *xtitle;
	GtkWidget *xtime;
	GtkWidget *xplay;
	GtkWidget *xbar;
	GtkWidget *xlist;
	GtkWidget *xscrolle;
	GtkWidget *xstate;
	};
enum WHICH_BUTTON{
	BUTTON_LEFT=1,
	BUTTON_MODD,
	BUTTON_RIGHT
}; 
#endif
